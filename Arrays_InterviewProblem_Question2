Q2. Christmas Trees
Problem Description
You are given an array A consisting of heights of Christmas trees and an array B of the same size consisting of the cost of each of the trees (Bi is the cost of tree Ai, where 1 ≤ i ≤ size(A)), and you are supposed to choose 3 trees (let's say, indices p, q, and r), such that Ap < Aq < Ar, where p < q < r.
The cost of these trees is Bp + Bq + Br.

You are to choose 3 trees such that their total cost is minimum. Return that cost.

If it is not possible to choose 3 such trees return -1.



Problem Constraints
1 <= A[i], B[i] <= 109
3 <= size(A) = size(B) <= 3000



Input Format
First argument is an integer array A.
Second argument is an integer array B.



Output Format
Return an integer denoting the minimum cost of choosing 3 trees whose heights are strictly in increasing order, if not possible, -1.



Example Input
Input 1:

 A = [1, 3, 5]
 B = [1, 2, 3]
Input 2:

 A = [1, 6, 4, 2, 6, 9]
 B = [2, 5, 7, 3, 2, 7]


Example Output
Output 1:

 6 
Output 2:

 7 


Example Explanation
Explanation 1:

 We can choose the trees with indices 1, 2 and 3, and the cost is 1 + 2 + 3 = 6. 


Test Data 
A = [5, 9, 10, 4, 7, 8]
B = [5, 6, 4, 7, 2, 5]

Output 12

A : [ 100, 101, 100 ]
B : [ 2, 4, 5 ]

Output -1

import java.util.List;
import java.util.Arrays;
import java.util.ArrayList;
public class HelloWorld{

     public static void main(String[] args) {
            ArrayList<Integer>  arr = new ArrayList<Integer>();
            arr.addAll(Arrays.asList(5, 9, 10, 4, 7, 8));
            ArrayList<Integer>  arr2 = new ArrayList<Integer>();
            arr2.addAll(Arrays.asList(5, 6, 4, 7, 2, 5));
            System.out.println(maxSubarray(arr,arr2));

        }

public class Solution {
    public int solve(ArrayList<Integer> A, ArrayList<Integer> B) {

        int len = A.size();
        int min1 = Integer.MAX_VALUE;
        int sum = Integer.MAX_VALUE;
        int min2 = Integer.MAX_VALUE;
        int sum1 = 0;
    
        boolean c = false; 
            for (int i = 1 ; i < len ; i++){
                min1 = Integer.MAX_VALUE;
                min2 = Integer.MAX_VALUE;
                boolean b = false; 
                for(int j =0; j < i; j++){
                    if(A.get(j)<A.get(i)){   
                        min1 = Integer.min(B.get(j), min1); 
                        b = true;
                    }
                }
                for(int j =i+1; j < len; j++){
                    if(A.get(i)<A.get(j) && b == true){
                        min2 = Integer.min(B.get(j),min2);
                        sum1 = min1 + min2 + B.get(i);
                        sum = Integer.min(sum, sum1 );
                        c = true;
                    }
                }
            }
if(c==true) return sum;
else return -1;

    }
}


