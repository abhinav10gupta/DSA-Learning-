Q4. Range Sum Query

Problem Description
You are given an integer array A of length N.
You are also given a 2D integer array B with dimensions M x 2, where each row denotes a [L, R] query.
For each query, you have to find the sum of all elements from L to R indices in A (1 - indexed).
More formally, find A[L] + A[L + 1] + A[L + 2] +... + A[R - 1] + A[R] for each query.



Problem Constraints
1 <= N, M <= 105
1 <= A[i] <= 109
1 <= L <= R <= N


Input Format
The first argument is the integer array A.
The second argument is the 2D integer array B.


Output Format
Return an integer array of length M where ith element is the answer for ith query in B.


Example Input
Input 1:
A = [1, 2, 3, 4, 5]
B = [[1, 4], [2, 3]]
Input 2:

A = [2, 2, 2]
B = [[1, 1], [2, 3]]


Example Output
Output 1:
[10, 5]
Output 2:

[2, 4]


Example Explanation
Explanation 1:
The sum of all elements of A[1 ... 4] = 1 + 2 + 3 + 4 = 10.
The sum of all elements of A[2 ... 3] = 2 + 3 = 5.
Explanation 2:

The sum of all elements of A[1 ... 1] = 2 = 2.
The sum of all elements of A[2 ... 3] = 2 + 2 = 4.



Test Data 1
A : [ 7, 3, 1, 5, 5, 5, 1, 2, 4, 5 ]
B : 
[
  [7, 10]
  [3, 10]
  [3, 5]
  [1, 10]
]
Output 1
12 28 11 38 


Test Data 2 
A : [ 720, 79473, 40625, 68587, 35751, 5635, 86295, 522, 96613, 81173, 67463, 90371, 78911, 8415, 90539, 7434, 22848, 78504, 42592, 78437, 47656, 31353, 28830, 95539, 35937, 51021, 90271, 1033, 74361, 25764, 64718, 58167, 93537, 17975, 13742, 2634, 45537, 91654, 86884, 56650, 34901, 49740, 66242, 53124, 65641, 23508, 51824, 55362, 4588, 58149, 74521, 87189, 68404, 90425, 81135, 71093, 878, 24107, 21212, 92863, 38175, 27983, 89671, 91069, 860, 94171, 97407, 26212, 75331, 73347, 15815, 9495, 82165, 58371, 66174, 88296, 55024 ]
B : 
[
  [46, 54]
  [7, 76]
  [18, 77]
  [11, 44]
  [61, 62]
  [36, 63]
  [4, 74]
  [34, 71]
  [22, 66]
  [47, 48]
  [24, 27]
  [46, 49]
  [23, 53]
  [45, 57]
  [6, 59]
  [36, 58]
  [64, 76]
  [9, 32]
  [20, 24]
  [39, 41]
  [17, 27]
  [57, 74]
  [33, 68]
  [47, 51]
  [31, 71]
  [6, 43]
  [1, 38]
  [15, 52]
  [50, 65]
  [12, 50]
  [47, 72]
  [15, 34]
  [8, 61]
  [16, 65]
  [7, 75]
  [18, 69]
  [39, 52]
  [38, 44]
  [26, 63]
  [8, 60]
  [53, 58]
]

Output 2 
513970 3852828 3277268 1782784 66158 1514094 3808331 2020023 2382442 107186 272768 135282 1627447 732717 2831058 1244190 778713 1347950 281815 178435 602988 919132 1949067 244444 2236445 1999898 1930637 1958406 917734 1974393 1421286 1036516 2870166 2565742 3764532 2828581 768323 439195 2004683 2831991 336042 

public class Solution {
    public long[] rangeSum(int[] A, int[][] B) {
        int sizei = A.length+1;
        int sizej = B.length;
        long sum[] = new long[sizei];
        long result[] = new long[sizej]; 
        sum[0] = 0; 
           for(int i = 1; i < sizei; i++){ 
                    sum[i] = sum[i-1] + A[i-1];
            }
           
            for(int j = 0; j < sizej; j++){
                 result[j]=sum[B[j][1]]-sum[B[j][0]-1];
            }
            
        return result;
    }
}


